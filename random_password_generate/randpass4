#!/usr/bin/env python3
"""Generate a cryptographically strong url safe random password
"""

import argparse
import pyperclip
import random
import secrets

CHARS_TO_BYTES_MAP = {
    8: 6,
    16: 12,
    32: 24,
    64: 48,
    128: 96,
    256: 192
}

def entropy_seed(num_char):
    for i in range(random.randint(random.randint(1,13),random.randint(14,42))):
        rand_bytes = secrets.token_urlsafe(CHARS_TO_BYTES_MAP[num_char])
    return rand_bytes

def main():
    arg_parser = argparse.ArgumentParser(prog='randpass', description='Random Password Generator \n Supports 8,16,32,64,128, or 256 chars')

    arg_parser.add_argument(
                            '--num-chars'
                            , dest='num_chars'
                            , action='store'
                            , required=False
                            , default=64
                            , help='Number of chars - 8, 16, 32, 64(default), 128, or 256'
                            )


    args = arg_parser.parse_args()
    num_chars = int(args.num_chars)

    num_chars_supported = list(CHARS_TO_BYTES_MAP.keys())

    if num_chars in num_chars_supported:
        token = entropy_seed (num_chars)
        randtoken = ''.join(random.sample(token,len(token)))
        print (len(randtoken), "characters long password")
        print (randtoken)
        print ('Copied to the clipboard')
        pyperclip.copy(randtoken)
    else:
        print ('ERROR: Only following number of chars supported', num_chars_supported)

if __name__ == '__main__':
    main()
